<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Page extends A {        private $_attach_dir;    private $_curruid;    private $_prepage = 10;    public function __construct() {        parent::__construct();                $this->_curruid     = (int) $this->auth->user('uid');        $this->_attach_dir  = config_item('site_attach_dir') . DIRECTORY_SEPARATOR;        if ( @is_dir($this->_attach_dir) === FALSE ) {            create_dir($this->_attach_dir);        }    }        public function index($start = 0) {        $this->load->library('pagination');        $config['base_url']     = admin_base_url('page/index');        $config['total_rows']   = $this->page_model->get_rows();        $config['per_page']     = $this->_prepage;        $config['num_links']    = 5;        $config['uri_segment']	= 4;        $config['suffix']       = config_item('url_suffix');        $this->pagination->initialize($config);                 $data['pres'] = $this->_prepage;        $data['page'] = $this->pagination->create_links();        $data['rows'] = $config['total_rows'];        $data['list'] = $this->page_model->get_list($start, $config['per_page']);        $this->load->view('admin_page', $data);    }        public function create() {        $this->load->view('admin_page_create');    }        public function update($pid = 0) {        $data['page'] = $this->page_model->get_info(array('pid'=>$pid));                if( ! $data['page'] ) {            show_404();        }        $this->load->view('admin_page_update', $data);    }        public function create_action() {        if( ! $this->input->is_ajax_request() ) {            show_404();        }        $name           = $this->input->post('name', true);        $link           = $this->input->post('link', true);        $keyword        = $this->input->post('keyword', true);        $description    = $this->input->post('description', true);        $content        = $this->input->post('content');        $content        = strip_tags($content, '<p><a><strong><img><em><span><ul><ol><li><br>');        $sort           = (int) $this->input->post('sort');                if(trim($description) == '') {            $data['description'] = substring(strip_tags($content), 120);        } else {            $data['description'] = $description;        }                $data['uid']        = $this->_curruid;        $data['name']       = $name;        $data['link']       = url_title($link, 'underscore', true);        $data['keyword']    = format_keyword($keyword);        $data['content']    = htmlspecialchars($content);        $data['created']    = $data['updated'] = time();        $data['sort']       = ($sort > 255) ? 255 : $sort;                if( empty($data['name']) ) {            JSON('error', '请填写页面名称！');        }        if( empty($data['link']) ) {            JSON('error', '请填写页面链接');        }                if( $this->page_model->get_info(array('name'=>$data['name'])) ) {            JSON('error', '对不起，页面名称已经存在！');        }                if( $this->page_model->get_info(array('link'=>$data['link'])) ) {            JSON('error', '对不起，页面链接已经存在！');        }                if( strip_tags($content) == '' ) {            JSON('error', '请填写页面内容');        }                $this->db->insert('page', $data);        unset($data);                if( $this->db->insert_id() ) {            JSON('success', '恭喜，页面已保存成功！');        } else {            JSON('error', '对不起，页面保存失败，请重试！');        }    }        public function update_action() {        if( ! $this->input->is_ajax_request() ) {            show_404();        }                $pid = (int) $this->input->post('pid');                if( $pid === 0 ) {            JSON('error', '数据错误，无法更新页面！');        }                $name           = $this->input->post('name', true);        $link           = $this->input->post('link', true);        $keyword        = $this->input->post('keyword', true);        $description    = $this->input->post('description', true);        $content        = $this->input->post('content');        $content        = strip_tags($content, '<p><a><strong><img><em><span><ul><ol><li><br>');        $sort           = (int) $this->input->post('sort');                if(trim($description) == '') {            $data['description'] = substring(strip_tags($content), 120);        } else {            $data['description'] = $description;        }        $data['name']       = $name;        $data['link']       = url_title($link, 'underscore', true);        $data['keyword']    = format_keyword($keyword);        $data['content']    = htmlspecialchars($content);        $data['created']    = $data['updated'] = time();        $data['sort']       = ($sort > 255) ? 255 : $sort;                if( empty($data['name']) ) {            JSON('error', '请填写页面名称！');        }        if( empty($data['link']) ) {            JSON('error', '请填写页面链接');        }                if( $this->page_model->get_info(array('pid !='=>$pid, 'name'=>$data['name'])) ) {            JSON('error', '对不起，页面名称已经存在！');        }                if( $this->page_model->get_info(array('pid !='=>$pid, 'link'=>$data['link'])) ) {            JSON('error', '对不起，页面链接已经存在！');        }                if( strip_tags($content) == '' ) {            JSON('error', '请填写页面内容');        }                $this->db->update('page', $data, array('pid'=>$pid));        unset($data);                if( $this->db->affected_rows() ) {            JSON('success', '恭喜，页面已更新成功！');        } else {            JSON('error', '页面更新失败，请重试！');        }    }        public function delete_action() {        if( ! $this->input->is_ajax_request() ) {            show_404();        }                $pid = (int) $this->input->get('pid');        $page = $this->page_model->get_info(array('pid'=>$pid));                if( ! $page ) {            JSON('error', '找不到您要删除的页面！');        }        $state = $this->page_model->delete_by_pid($pid);                if( $state ) {            // 删除页面的图片            $this->load->library('action');            $this->action->unlink_string_attach($page->content);                        JSON('success', '恭喜，页面删除成功！');        } else {            JSON('error', '对不起，页面文章失败，请重试！');        }    }    }/* End of file page.php *//* Location: ./application/controllers/page.php */