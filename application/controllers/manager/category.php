<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Category extends A {        private $_prepage = 10;        public function __construct() {        parent::__construct();    }        public function index($start = 0) {            $this->load->library('pagination');        $config['base_url']     = admin_base_url('category/index');        $config['total_rows']   = $this->category_model->get_rows();        $config['per_page']     = $this->_prepage;        $config['num_links']    = 5;        $config['uri_segment']	= 4;        $config['suffix']       = config_item('url_suffix');        $this->pagination->initialize($config);                 $data['pres'] = $this->_prepage;        $data['page'] = $this->pagination->create_links();        $data['rows'] = $config['total_rows'];        $data['list'] = $this->category_model->get_list($start, $config['per_page']);                $this->load->view('admin_category', $data);    }        public function create() {        $this->load->view('admin_category_create');    }        public function update($cid = 0) {            $data['category'] = $this->category_model->get_info(array('cid'=>$cid));                if( ! $data['category'] ) {            show_404();        }                $this->load->view('admin_category_update', $data);    }        public function delete($cid = 0) {        $data['category'] = $this->category_model->get_info(array('cid'=>$cid));                if( !$data['category'] ) {            show_404();        }                $data['post'] = 42542;                $data['list'] = $this->category_model->get_list(0, 100);                $this->load->view('admin_category_delete', $data);    }        public function create_action() {        if( ! $this->input->is_ajax_request() ) {            show_404();        }                $name           = $this->input->post('name', true);        $link           = $this->input->post('link', true);        $keyword        = $this->input->post('keyword', true);        $description    = $this->input->post('description', true);        $sort           = (int) $this->input->post('sort');        $data['name']           = trim($name);        $data['link']           = url_title($link, 'underscore', true);        $data['sort']           = ($sort > 255) ? 255 : $sort;        $data['keyword']        = format_keyword($keyword);        $data['description']    = substring(format_content($description), 120);                if( ! $data['name'] or ! $data['link']) {            JSON('error', '对不起，请填写必填字段！');        }                if( $this->category_model->get_info(array('name'=>$name)) ) {            JSON('error', '对不起，分类名称已经存在！');        }                if( $this->category_model->get_info(array('link'=>$link)) ) {            JSON('error', '对不起，分类链接名称已经存在！');        }                $this->db->insert('category', $data);        if ( $this->db->insert_id() ) {            JSON('success', '恭喜，分类 ' . $data['name'] . ' 已添加成功！');        } else {            JSON('error', '对不起，分类添加失败，请重试！');        }    }        public function update_action() {        if( ! $this->input->is_ajax_request() ) {            show_404();        }                $cid = (int) $this->input->post('cid');                if( $cid === 0 ) {            JSON('error', '对不起，更新分类提交失败！');        }                $name           = $this->input->post('name', true);        $link           = $this->input->post('link', true);        $keyword        = $this->input->post('keyword', true);        $description    = $this->input->post('description', true);        $sort           = (int) $this->input->post('sort');                $data['name']           = trim($name);        $data['link']           = url_title($link, 'underscore', true);        $data['sort']           = ($sort > 255) ? 255 : $sort;        $data['keyword']        = format_keyword($keyword);        $data['description']     = substring(format_content($description), 240);                if( ! $data['name'] or ! $data['link']) {            JSON('error', '对不起，请填写必填字段！');        }                if( $this->category_model->get_info(array('cid !='=>$cid, 'name'=>$name)) ) {            JSON('error', '对不起，分类名称已经存在！');        }                if( $this->category_model->get_info(array('cid !='=>$cid, 'link'=>$link)) ) {            JSON('error', '对不起，分类链接名称已经存在！');        }                $this->db->update('category', $data, array('cid'=>$cid));        if ( $this->db->affected_rows() ) {            JSON('success', '恭喜，分类 ' . $data['name'] . ' 更新成功！');        } else {            JSON('error', '对不起，分类没有更新或更新失败！');        }    }        public function delete_action() {        if( ! $this->input->is_ajax_request() ) {            show_404();        }                $cid = (int) $this->input->post('cid');        $new = (int) $this->input->post('newcategory');        $category = $this->category_model->get_info(array('cid'=>$cid));                if( ! $category OR ($new === 0) ) {            JSON('error', '对不起，没有找到您要删除的分类！');        }                $this->db->delete('category', array('cid'=>$cid));                if ( $this->db->affected_rows() ) {                    // 转移该分类下的所有文章            $this->db->update('article', array('cid'=>$new), array('cid'=>$cid));                    JSON('success', '恭喜，分类 ' . $category->name . ' 删除成功！');        } else {            JSON('error', '对不起，删除分类失败，请重试！');        }    }}/* End of file category.php *//* Location: ./application/controllers/category.php */